from io import StringIO
from biotite.sequence.annotation import (
    Annotation,
    Location,
)
from typing import (
    Dict,
    Iterator,
    List,
    Optional,
    Tuple,
    Union,
)


def _parse_locs(loc_str: str) -> List[Location]: ...


def _parse_single_loc(loc_str: str) -> Location: ...


class GenBankFile:
    def __init__(self) -> None: ...
    def _get_field_indices(self, name: str) -> Tuple[List[int], List[int]]: ...
    def _get_minor_fields(self, field_start: int, field_stop: int) -> Dict[str, str]: ...
    def get_accession(self) -> str: ...
    def get_annotation(self, include_only: Optional[List[str]] = None) -> Annotation: ...
    def get_comment(self) -> str: ...
    def get_db_link(self) -> Dict[str, str]: ...
    def get_definition(self) -> str: ...
    def get_gi(self) -> str: ...
    def get_locus(self) -> Dict[str, str]: ...
    def get_references(self) -> List[Dict[str, Union[Tuple[int, int], str]]]: ...
    def get_version(self) -> str: ...
    def read(self, file: Union[str, StringIO]) -> None: ...


class GenPeptFile:
    def get_db_source(self) -> str: ...
    def get_locus(self) -> Dict[str, str]: ...


class MultiFile:
    def __init__(self, file_type: str) -> None: ...
    def __iter__(self) -> Iterator[GenPeptFile]: ...
