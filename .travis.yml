notifications:
  on_success: never
  on_failure: never

language: generic
matrix:
  include:
  - os: linux
    dist: trusty
    env:
      - PY_VERSION='3.7'
      - NUMPY_VERSION='1.15'
      - COMPLETE=false
      - BIN=true
      - SRC=false
  - os: linux
    dist: trusty
    env:
      - PY_VERSION='3.8'
      - NUMPY_VERSION='1.15'
      - COMPLETE=true
      - BIN=true
      - SRC=true
  - os: linux
    dist: trusty
    env:
      - PY_VERSION='3.9'
      - NUMPY_VERSION='1.19'
      - COMPLETE=false
      - BIN=true
      - SRC=true
  - os: osx
    env:
      - PY_VERSION='3.7'
      - NUMPY_VERSION='1.15'
      - COMPLETE=false
      - BIN=true
      - SRC=false
  - os: osx
    env:
      - PY_VERSION='3.8'
      - NUMPY_VERSION='1.15'
      - COMPLETE=false
      - BIN=true
      - SRC=false
  - os: osx
    env:
      - PY_VERSION='3.9'
      - NUMPY_VERSION='1.19'
      - COMPLETE=false
      - BIN=true
      - SRC=false

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then MINICONDA=Miniconda3-latest-Linux-x86_64.sh;  fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ];   then MINICONDA=Miniconda3-latest-MacOSX-x86_64.sh; fi
  - wget https://repo.continuum.io/miniconda/$MINICONDA
  
  - bash $MINICONDA -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  - if [ $COMPLETE == true ];  then conda env create -q -f environment.yml; fi
  - if [ $COMPLETE == true ];  then conda install -n biotite-dev python=$PY_VERSION; fi
  - if [ $COMPLETE == true ];  then conda install -n biotite-dev numpy=$NUMPY_VERSION; fi
  - if [ $COMPLETE == false ]; then conda create -q -n biotite-dev python=$PY_VERSION; fi
  - if [ $COMPLETE == false ]; then conda install -n biotite-dev -c conda-forge "cython>=0.29" numpy=$NUMPY_VERSION "requests>=2.12" "msgpack-python>=0.5.6" "pytest>=3.2"; fi
  - source activate biotite-dev
  - python setup.py bdist_wheel
  - pip install ./dist/*.whl

script:
  - if [ $COMPLETE == true ];  then pytest --ignore=tests/application/test_blast.py --ignore=tests/application/test_sra.py --ignore=tests/database/test_entrez.py; fi
  - if [ $COMPLETE == false ]; then pytest --ignore=tests/structure/test_trajectory.py --ignore=tests/application/ --ignore=tests/database/ --ignore=tests/test_doctest.py; fi

before_deploy:
  - if [ $SRC == true ]; then python setup.py sdist; fi
  - if [ $BIN == true ] && [ $TRAVIS_OS_NAME == "linux" ]; then rename 's/linux/manylinux1/g' dist/*.whl; fi
  - if [ $COMPLETE == true ]; then sphinx-build ./doc ./doc/_build/doc; fi
  - if [ $COMPLETE == true ]; then cd doc/_build; fi
  - if [ $COMPLETE == true ]; then zip -r doc.zip doc; fi
  - if [ $COMPLETE == true ]; then cd ../..; fi

deploy:
  provider: releases
  token:
    secure: d2R8Zq43rfldzjVeC/W2yzhjShI/QJuXfC0UAq2MBorkWrzd0WNKRvsq4lKROhJcOopm5eV6gwlQnvfmuwIvdZzPc/tI0+fdYCikcTJotjX6hwRvjCAiGprZQNzjdk5jewNfr5mE1RrXK04i7OJKne6fp3TuIvF9wY1/LNC8dUcF1Ph9okwbwB6J1b6rq2WJr5rtkwOGfQE5lQ6K9xcyv9u64Th8gzsH79glcY8+tQp+juN7CLfYnx++TzI/mumaUUBD0SNAAD+2BNFl5GcclCMQ30s5Ttx+heqAZ3LGVLgWqEz9xnXR8dDbjxrIt5dj1oyKeF55CrTsQwnpHo4ZUde1lGI9UG85Y3EzOfVE0v3bATjqJ+4OeKMg5T1Q7+9Ok0/qxyh+7gBX6SmIH8gzjMesCgLDbYnCaTFDuWQJ86ggHJHsRRAmLkzlM/fHD1qBBQw28N2pG4VeqOWVVpRpCH6BfBEQAsgx0yRA3tLO0rDOw5yqRzYum1PNiCJa4WePiMG+je/OXFFyJ0bOu4h9aSP1/PvcTtUdCRCWnBrfDZumGoRP/RPZKvmb5Lj3W482QW0a7EEfcRj6PlpKcpMsG+gbXcIknX9eQTpVP5y0Bn+Zpiod+aKMSfPdgFs117PMgl0luYsi9nWZDAUy+uHs4ZD+kx4HFQiOGYhK1lNGzPA=
  file:
    - dist/*
    - doc/_build/doc.zip
  file_glob: true
  on:
    repo: biotite-dev/biotite
    tags: true
  skip_cleanup: true
